---
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
const { blok } = Astro.props;
---

<section class="max-w-4xl mx-auto px-4 py-28 sm:py-32">
  <!-- Titel -->
  <h1 class="text-4xl font-bold text-white mb-4">{blok.title}</h1>

  <!-- URL -->
  {
    blok.live_url && (
      <div class="flex items-center gap-2 text-sm mb-6">
        <span class="relative flex h-2 w-2">
          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75" />
          <span class="relative inline-flex rounded-full h-2 w-2 bg-green-500" />
        </span>
        <a
          href={blok.live_url}
          target="_blank"
          rel="noopener noreferrer"
          class="hover:underline text-green-400"
        >
          {blok.live_url || "Live Demo"}
        </a>
      </div>
    )
  }

  <!-- Submeta: Zeit, Rolle, Tags -->
  <div
    class="text-sm text-zinc-400 mb-4 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2"
  >
    <span>{blok.timespan}</span>
    <span class="italic">{blok.role}</span>
  </div>

  <!-- Tags -->
  {
    blok.tags && blok.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-6">
        {blok.tags.map((tagBlok) => (
          <span class="text-xs bg-zinc-800 text-white px-3 py-1 rounded-full">
            {tagBlok.tag}
          </span>
        ))}
      </div>
    )
  }

  <!-- Pitch / Kurzbeschreibung -->
  {blok.pitch && <p class="text-zinc-300 text-base mb-10">{blok.pitch}</p>}

  <!-- Modularer Content -->
  <div class="space-y-12">
    {blok.body?.map((innerBlok) => <StoryblokComponent blok={innerBlok} />)}
  </div>
</section>
